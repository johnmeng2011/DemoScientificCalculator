package calculator;


/*
 *Demo scientific calculator, copyrighty 2015 held by Jun Meng
Email: j.meng2@uq.edu.au
Please don't distribute without first seeking advice from the author
 */



import java.util.Stack;
import java.util.HashMap;

public class CalculatorFrame extends javax.swing.JFrame {

    /**
     * Creates new form CalculatorFrame
     */
    public CalculatorFrame() {
        initComponents();
        setResizable(false);
        numberStack  = new Stack();
        operatorStack = new Stack();
        
        /* the operations hash map records all the operations' types and priorities*/
        operations = new HashMap();
        operations.put("=",1);
        operations.put("+",1);
        operations.put("-",1);
        operations.put("*",2);
        operations.put("/",2);
        operations.put("power",3);
        operations.put("sin", 4);
        operations.put("cos",4);
        operations.put("tan",4);
        operations.put("ln",4);
        operations.put("log10",4);
        operations.put("sqrt", 4);
        operations.put("exp", 4);
        operations.put("inverse", 4);
        operations.put("asin",4);
        operations.put("acos",4);
        operations.put("atan",4);
        operations.put("square",4);
       
     
    }

    private String op1 = "";
    private String op2 = "";
    
    //current operation
    private String operation;

    //Stack used for storing operands 
    private Stack numberStack;
    
    //Stack used for storing operators
    private Stack operatorStack;
    
    
    private HashMap operations;
    
    //indicate whether there is an existing operand
    private boolean opSet = false;
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button8 = new java.awt.Button();
        canvas1 = new java.awt.Canvas();
        Badd = new java.awt.Button();
        Bsubtract = new java.awt.Button();
        Bmultiply = new java.awt.Button();
        Bdivide = new java.awt.Button();
        Bequal = new java.awt.Button();
        button1 = new java.awt.Button();
        B2 = new java.awt.Button();
        B3 = new java.awt.Button();
        B4 = new java.awt.Button();
        B5 = new java.awt.Button();
        B6 = new java.awt.Button();
        B7 = new java.awt.Button();
        B8 = new java.awt.Button();
        B9 = new java.awt.Button();
        Bdot = new java.awt.Button();
        B0 = new java.awt.Button();
        B1 = new java.awt.Button();
        Binverse = new java.awt.Button();
        Bcos = new java.awt.Button();
        Btan = new java.awt.Button();
        Bsin = new java.awt.Button();
        Bln = new java.awt.Button();
        Blog10 = new java.awt.Button();
        Barcsin = new java.awt.Button();
        Barccos = new java.awt.Button();
        Barctan = new java.awt.Button();
        Bexp = new java.awt.Button();
        displayField = new javax.swing.JTextField();
        Bdel = new java.awt.Button();
        Bclear = new java.awt.Button();
        Btogglepn = new java.awt.Button();
        Bpower = new java.awt.Button();
        Bsquare = new java.awt.Button();
        Bsqrt = new java.awt.Button();

        button8.setLabel("button8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Badd.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Badd.setLabel("+");
        Badd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaddActionPerformed(evt);
            }
        });

        Bsubtract.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Bsubtract.setLabel("-");
        Bsubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsubtractActionPerformed(evt);
            }
        });

        Bmultiply.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Bmultiply.setLabel("ร");
        Bmultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmultiplyActionPerformed(evt);
            }
        });

        Bdivide.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Bdivide.setLabel("รท");
        Bdivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdivideActionPerformed(evt);
            }
        });

        Bequal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Bequal.setLabel("=");
        Bequal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BequalActionPerformed(evt);
            }
        });

        button1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        button1.setLabel("1");
        button1.setVisible(false);

        B2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B2.setLabel("2");
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        B3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B3.setLabel("3");
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B4.setLabel("4");
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B5.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B5.setLabel("5");
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        B6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B6.setLabel("6");
        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });

        B7.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B7.setLabel("7");
        B7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B7ActionPerformed(evt);
            }
        });

        B8.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B8.setLabel("8");
        B8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B8ActionPerformed(evt);
            }
        });

        B9.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B9.setLabel("9");
        B9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B9ActionPerformed(evt);
            }
        });

        Bdot.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Bdot.setLabel(". ");
        Bdot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdotActionPerformed(evt);
            }
        });

        B0.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B0.setLabel("0");
        B0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B0ActionPerformed(evt);
            }
        });

        B1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        B1.setLabel("1");
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        Binverse.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Binverse.setLabel("1/x");
        Binverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinverseActionPerformed(evt);
            }
        });

        Bcos.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Bcos.setLabel("cos");
        Bcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BcosActionPerformed(evt);
            }
        });

        Btan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Btan.setLabel("tan");
        Btan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtanActionPerformed(evt);
            }
        });

        Bsin.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Bsin.setLabel("sin");
        Bsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsinActionPerformed(evt);
            }
        });

        Bln.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Bln.setLabel("ln");
        Bln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlnActionPerformed(evt);
            }
        });

        Blog10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Blog10.setLabel("log10");
        Blog10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Blog10ActionPerformed(evt);
            }
        });

        Barcsin.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Barcsin.setLabel("arcsin");
        Barcsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarcsinActionPerformed(evt);
            }
        });

        Barccos.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Barccos.setLabel("arccos");
        Barccos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarccosActionPerformed(evt);
            }
        });

        Barctan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Barctan.setLabel("arctan");
        Barctan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarctanActionPerformed(evt);
            }
        });

        Bexp.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Bexp.setLabel("exp");
        Bexp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BexpActionPerformed(evt);
            }
        });

        displayField.setEditable(false);
        displayField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        displayField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        Bdel.setLabel("DEL");
        Bdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdelActionPerformed(evt);
            }
        });

        Bclear.setLabel("CLR");
        Bclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BclearActionPerformed(evt);
            }
        });

        Btogglepn.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Btogglepn.setLabel("+/-");
        Btogglepn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtogglepnActionPerformed(evt);
            }
        });

        Bpower.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Bpower.setLabel("y^x");
        Bpower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BpowerActionPerformed(evt);
            }
        });

        Bsquare.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Bsquare.setLabel("x^2");
        Bsquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsquareActionPerformed(evt);
            }
        });

        Bsqrt.setLabel("โ");
        Bsqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsqrtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 36, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Badd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bsubtract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(Bmultiply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bdot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bequal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bdivide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Btan, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(Bcos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Binverse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bsin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Blog10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(Bln, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Barcsin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Barccos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Bpower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Bexp, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Barctan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bsquare, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Bsqrt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Btogglepn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bdel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bclear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(displayField, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(displayField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Barcsin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Bsin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Badd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(B3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(Bexp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Bsqrt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Bpower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bsubtract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bcos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Barccos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Btogglepn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(B8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(B7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(B9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Bmultiply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Btan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Barctan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Bsquare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bdel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Bclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bequal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bdivide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bdot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Blog10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Binverse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Bln, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //event handler for button 1 
    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        // TODO add your handling code here:
        
        if(opSet){
            displayField.setText("");
            opSet = false;
        }
        String display = displayField.getText();
        display = display + "1";
        displayField.setText(display);
           
    }//GEN-LAST:event_B1ActionPerformed

     //event handler for button 2
    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        // TODO add your handling code here:
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
      
         String display = displayField.getText();
        display = display + "2";
        displayField.setText(display);
    }//GEN-LAST:event_B2ActionPerformed

     //event handler for button 3
    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        // TODO add your handling code here:
      
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
         String display = displayField.getText();
        display = display + "3";
        displayField.setText(display);
    }//GEN-LAST:event_B3ActionPerformed

    
     //event handler for button 4
    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        // TODO add your handling code here:
        
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
   
         String display = displayField.getText();
        display = display + "4";
        displayField.setText(display);
    }//GEN-LAST:event_B4ActionPerformed

     //event handler for button 5
    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        // TODO add your handling code here:
        
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
    
        String display = displayField.getText();
        display = display + "5";
        displayField.setText(display);
    }//GEN-LAST:event_B5ActionPerformed

     //event handler for button 6
    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        // TODO add your handling code here:
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
     
        String display = displayField.getText();
        display = display + "6";
        displayField.setText(display);
    }//GEN-LAST:event_B6ActionPerformed

     //event handler for button 7
    private void B7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B7ActionPerformed
        // TODO add your handling code here:
        
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
    
         String display = displayField.getText();
        display = display + "7";
        displayField.setText(display);
    }//GEN-LAST:event_B7ActionPerformed

     //event handler for button 8 
    private void B8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B8ActionPerformed
        // TODO add your handling code here:
        
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
           
         String display = displayField.getText();
        display = display + "8";
        displayField.setText(display);
    }//GEN-LAST:event_B8ActionPerformed

     //event handler for button 9
    private void B9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B9ActionPerformed
        // TODO add your handling code here:
        
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
            
         String display = displayField.getText();
        display = display + "9";
        displayField.setText(display);
    }//GEN-LAST:event_B9ActionPerformed

     //event handler for button 0 
    private void B0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B0ActionPerformed
        // TODO add your handling code here:
        
         if(opSet){
            displayField.setText("");
            opSet = false;
        }
   
         
         String display = displayField.getText();
        if(display.equals("")|| !display.equals("0"))
            display = display + "0";
        
        displayField.setText(display);
    }//GEN-LAST:event_B0ActionPerformed

    
    private void BdotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdotActionPerformed
        // TODO add your handling code here:
        String display = displayField.getText();
        if(opSet){
            display = "0.";
            opSet =false;
        }
        else if(!display.equals("") && !display.contains("."))
            display = display + ".";
        else if(display.equals(""))
            display = "0.";
        displayField.setText(display);
    }//GEN-LAST:event_BdotActionPerformed

    private void BclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BclearActionPerformed
        // TODO add your handling code here:
        displayField.setText("");
        numberStack.clear();
        operatorStack.clear();
        
    }//GEN-LAST:event_BclearActionPerformed

    private void BaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaddActionPerformed
        // TODO add your handling code here:
       
        operation = "+"; 
        
        processOperations();
        
      
    }//GEN-LAST:event_BaddActionPerformed

    private void BequalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BequalActionPerformed
        // TODO add your handling code here:
        
        operation = "="; 
        
        processOperations();
            
    }//GEN-LAST:event_BequalActionPerformed

    

    
    private void BdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdelActionPerformed
        // TODO add your handling code here:
        String display = displayField.getText();
        if(!display.equals(""))
            display = display.substring(0, display.length()-1);
        displayField.setText(display);
        
    }//GEN-LAST:event_BdelActionPerformed

    private void BsubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsubtractActionPerformed
        // TODO add your handling code here:
       
        operation = "-"; 
        
        processOperations();
    }//GEN-LAST:event_BsubtractActionPerformed

    private void BmultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmultiplyActionPerformed
        // TODO add your handling code here:
         operation = "*"; 
        
        processOperations();
    }//GEN-LAST:event_BmultiplyActionPerformed

    private void BdivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdivideActionPerformed
        // TODO add your handling code here:
         operation = "/"; 
        
        processOperations();
    }//GEN-LAST:event_BdivideActionPerformed

    private void BsinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsinActionPerformed
        // TODO add your handling code here:
         operation = "sin";
         processOperations();
    }//GEN-LAST:event_BsinActionPerformed

    private void BcosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BcosActionPerformed
        // TODO add your handling code here:
         operation = "cos";
       processOperations();
    }//GEN-LAST:event_BcosActionPerformed

    private void BtanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtanActionPerformed
        // TODO add your handling code here:
          operation = "tan";
       processOperations();
    }//GEN-LAST:event_BtanActionPerformed

    private void BarcsinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarcsinActionPerformed
        // TODO add your handling code here:
       operation = "asin";
       processOperations();
        
    }//GEN-LAST:event_BarcsinActionPerformed

    private void Blog10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Blog10ActionPerformed
        // TODO add your handling code here:
       operation = "log10";
       processOperations();
    }//GEN-LAST:event_Blog10ActionPerformed

    private void BarccosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarccosActionPerformed
        // TODO add your handling code here:
         operation = "acos";
       processOperations();
       
        
    }//GEN-LAST:event_BarccosActionPerformed

    private void BarctanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarctanActionPerformed
        // TODO add your handling code here:
        operation = "atan"; 
        
        processOperations();
    }//GEN-LAST:event_BarctanActionPerformed

    private void BinverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinverseActionPerformed
        // TODO add your handling code here:
       
        operation = "inverse"; 
        
        processOperations();
        
    }//GEN-LAST:event_BinverseActionPerformed

    private void BlnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlnActionPerformed
        // TODO add your handling code here:
        
         operation = "ln"; 
        
        processOperations();
       
    }//GEN-LAST:event_BlnActionPerformed

    private void BexpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BexpActionPerformed
        // TODO add your handling code here:
        
         operation = "exp"; 
        
        processOperations();
         
    }//GEN-LAST:event_BexpActionPerformed

    private void BtogglepnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtogglepnActionPerformed
        // TODO add your handling code here:
        String display = displayField.getText();
        if(display.contains("-"))
            display = display.substring(1, display.length());
        else
            display = "-" +display;
        
            
        displayField.setText(display);
    }//GEN-LAST:event_BtogglepnActionPerformed

    private void BpowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BpowerActionPerformed
        // TODO add your handling code here:
       
        operation = "power";
      
        
        processOperations();
    }//GEN-LAST:event_BpowerActionPerformed

    private void BsquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsquareActionPerformed
        // TODO add your handling code here:
         operation = "square"; 
        
         processOperations();
    }//GEN-LAST:event_BsquareActionPerformed

    private void BsqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsqrtActionPerformed
        // TODO add your handling code here:
         operation = "sqrt"; 
        
         processOperations();
    }//GEN-LAST:event_BsqrtActionPerformed

   
    
        private String doOperation(String op1,String op2, String operation){
         
        String display="";
         switch(operation){
             case "=":
                 display = displayField.getText();
                 break;
             case "+":
                 display = Double.toString(Double.parseDouble(op1) + Double.parseDouble(op2));
                 break;
             case "-":
                 display = Double.toString(Double.parseDouble(op1) - Double.parseDouble(op2));
                 break;
             case "*":
                 display = Double.toString(Double.parseDouble(op1) * Double.parseDouble(op2));
                 break;
             case "/":
                 if (Double.parseDouble(op2) == 0.0) {
                     display = "error, divide by 0";
                     break;
                 }
                 display = Double.toString(Double.parseDouble(op1) / Double.parseDouble(op2));
                 break;
             case "power":
                 display = Double.toString(Math.pow(Double.parseDouble(op1), Double.parseDouble(op2)));
                 break;
    }
 
    return display;
}
        
private String doOperation(String op1, String operation) {
    String display = "";
    double x = Double.parseDouble(op1);
    switch (operation) {
        case "sin":
            display = Double.toString(Math.sin(Math.toRadians(x)));
            break;
        case "cos":
            display = Double.toString(Math.cos(Math.toRadians(x)));
            break;
        case "tan":
            display = Double.toString(Math.tan(Math.toRadians(x)));
            break;
        case "ln":
            if (x <= 0) {
                return "Error: operator must be positive";
            }
            display = Double.toString(Math.log(x));
            break;
        case "log10":
            if (x <= 0) {
                return "Error: operator must be positive";
            }
            display = Double.toString(Math.log10(x));
            break;
        case "inverse":
            if (x == 0) {
                return "Error: operator must not be zero";
            }
            display = Double.toString(1/x);
            break;
        case "exp":
            display = Double.toString(Math.exp(x));
            break;
        case "asin":
            if (Math.abs(x) > 1) {
                return "Error: operator must be within -1 to +1";
            }
            display = Double.toString(Math.toDegrees(Math.asin(x)));
            break;
        case "acos":
            if (Math.abs(x) > 1) {
                return "Error: operator must be within -1 to +1";
            }
            display = Double.toString(Math.toDegrees(Math.acos(x)));

            break;
        case "atan":
            display = Double.toString(Math.toDegrees(Math.atan(x)));
            break;
        case "sqrt":
            if (x < 0) {
                return "Error: operator must not be negative";
            }
            display = Double.toString(Math.sqrt(x));
            break;
        case "square":
            display = Double.toString(Math.pow(x, 2));
            break;

    }
    return display;
}
                
    /*process logic for any operator key pressed. */
    private void processOperations(){
        String lastOperator;
        int pLast,pNow;
        
        if(opSet){
            if(!operatorStack.empty()){
                operatorStack.pop();
            }
        }
        String number = displayField.getText();
        if(number.isEmpty()){
            return;
        }
       
        //pNow is the current priority level of the operation
        pNow = (int)operations.get(operation);
        if(!opSet){
            numberStack.push(number);
            opSet =true;
        }
        
        //if pNow ==4 , calculate the result immediately
        if(pNow==4){
              op1 = (String) numberStack.pop ();
              
              op1=doOperation(op1,operation);
              displayField.setText(op1);
              numberStack.push(op1);
              opSet = true;
        
          }
        
        //check if there is unprocessed operation in the stack
        if(!operatorStack.empty()){
          lastOperator = (String ) operatorStack.peek();
           pLast = (int) operations.get(lastOperator);
        
           //compare the priority of the current opeataion and the operation in the stack 
          if(pLast < pNow && pNow !=4)
              operatorStack.push(operation);
          else{
              
              //on condition of "=" or same level priority, dump the stack by carrying out all outstanding operations 
              if (operation.equals("=") || pNow <= pLast) {
                  while (!operatorStack.empty()) {
                      lastOperator = (String) operatorStack.pop();

                      op2 = (String) numberStack.pop();
                      op1 = (String) numberStack.pop();
                      op1 = doOperation(op1, op2, lastOperator);
                      numberStack.push(op1);
                  }
                   operatorStack.push(operation);

                  displayField.setText(op1);
                  if (operation.equals("=")) {
                      operatorStack.clear();
                      displayField.setText((String)numberStack.peek());
                  }
              }
              else{
                  
                  //otherwise process the previous operation
                  lastOperator = (String) operatorStack.pop();
                  
                  op2 = (String) numberStack.pop();
                  op1 = (String) numberStack.pop();
                  op1 = doOperation(op1, op2, lastOperator);
                  numberStack.push(op1);
                 
                  if(pNow!=4){  
                     operatorStack.push(operation);
                     displayField.setText(op1);
                  }
              }
              
              
          }
        }
        else{
            
            //empty operator stack process
            if(pNow !=4){
                operatorStack.push(operation);
                displayField.setText((String)numberStack.peek());
            }
            if(operation.equals("=")){
                displayField.setText((String)numberStack.peek());
            }
        }
        
        if(pNow!=4){
            opSet =true;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new CalculatorFrame().setVisible(true);
            }
        });

    

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button B0;
    private java.awt.Button B1;
    private java.awt.Button B2;
    private java.awt.Button B3;
    private java.awt.Button B4;
    private java.awt.Button B5;
    private java.awt.Button B6;
    private java.awt.Button B7;
    private java.awt.Button B8;
    private java.awt.Button B9;
    private java.awt.Button Badd;
    private java.awt.Button Barccos;
    private java.awt.Button Barcsin;
    private java.awt.Button Barctan;
    private java.awt.Button Bclear;
    private java.awt.Button Bcos;
    private java.awt.Button Bdel;
    private java.awt.Button Bdivide;
    private java.awt.Button Bdot;
    private java.awt.Button Bequal;
    private java.awt.Button Bexp;
    private java.awt.Button Binverse;
    private java.awt.Button Bln;
    private java.awt.Button Blog10;
    private java.awt.Button Bmultiply;
    private java.awt.Button Bpower;
    private java.awt.Button Bsin;
    private java.awt.Button Bsqrt;
    private java.awt.Button Bsquare;
    private java.awt.Button Bsubtract;
    private java.awt.Button Btan;
    private java.awt.Button Btogglepn;
    private java.awt.Button button1;
    private java.awt.Button button8;
    private java.awt.Canvas canvas1;
    private javax.swing.JTextField displayField;
    // End of variables declaration//GEN-END:variables


     
    
}
